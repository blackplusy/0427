1.多表查询
当一张表中数据无法满足条件时候，需要使用多表查询
a.笛卡尔积
两张表不做任何关联产生的数据,会导致数据量成倍增加，无效数据增加，所以引入内联查询、左联查询、右联查询
select * from ecs_goods;
select * from ecs_category;
select * from ecs_category,ecs_goods;
b.内联查询
语法:
select 列 from 表1，表2 where 表1.列=表2.列;
select 列 from 表1 inner join 表2 on 表1.列=表2.列;
关联列判断方法
	1.名字相同
	2.作用相同
	3.主外键关系
需求:查询商品名称是KD876的分类名称
	1>分析列
		商品名称
		分类名称
	2>分析表
		商品名称   ecs_goods
		分类名称   ecs_category
	3>关联
		select * from ecs_goods ,ecs_category
		where ecs_goods.cat_id=ecs_category.cat_id;
	4>过滤
		select cat_name from ecs_goods ,ecs_category
		where ecs_goods.cat_id=ecs_category.cat_id
		and goods_name='KD876';
需求:查询分类名称是3G手机的商品名称有哪些,分类id有哪些？
	1>分析列
		分类名称
		商品名称
	2>分析表
		ecs_goods
		ecs_category
	3>关联
		select * from ecs_goods g,ecs_category c
		where g.cat_id=c.cat_id;
	4>过滤
		select g.goods_name,cat_id from ecs_goods g,ecs_category c
		where g.cat_id=c.cat_id
		and c.cat_name='3G手机'	;	

		#练习1:查询分类名称是3G手机或者服装的商品名称有哪些

		#练习2：查询商品本店售价范围在2000和3000之间所有的商品的分类名称 
练习：
--1.jpg
	1>select * from test1 where department='计算机系' and place='北京';
	2>update test1 set department='信息学院' where department='计算机系';
	3>select t1.no,t1.name,t2.grade,t2.courses from test1 t1,test2 t2 where t1.no=t2.no and t2.grade>=75;
--2.jpg
	1>select s.name  from student s,achievement a 
		where s.id=a.id and a.mark>85;
	2>select count(*) from achievement where mark>=90;
	3>insert into achievement values(7,80);
	4>update achievement set mark=87 where id=3;
	5>
		delete from student where name='Betty';
		delete from achievement where id=6;
--4.jpg
	1>select s#,grade from sc where c#='C2';
	2>select sname from s where sname like 'D%';
	3>
		select s.s#,s.sname from s,sc,c
		where s.s#=sc.s#
		and sc.c#=c.c#
		and c.cname='Math';
	4>select s# from sc where c# in ('C2','C4');
2.导入sakila数据库
	1>下载sakila压缩包
	2>解压sakila压缩包
	3>命令提示符进入到解压缩后的文件夹
	4>登录mysql
		mysql -u root -p
	5>导入sakila-schema.sql
		source sakila-schema.sql;
	6>导入sakila-data.sql;
		source sakila-data.sql;

查询以C开头的国家有哪些城市?
	select  c.city from country co,city c
	where co.country_id=c.country_id
	and co.country like 'C%';

查询客户表中名字为MARY的所在城市?
	select c.city  from city c,address a,customer cu
	where c.city_id=a.city_id
	and  a.address_id=cu.address_id
	and cu.first_name='MARY';

查询客户表中名字为MARY的所在国家?
	select  co.country  
	from country co,city c,address a,customer cu
	where co.country_id=c.country_id
	and c.city_id=a.city_id
	and a.address_id=cu.address_id
	and cu.first_name='MARY';
	
3.子查询
	一条SQL语句的执行依赖于另外一条SQL语句的执行结果
	需求:查询商品名称是KD876的分类名称
		1>查询ecs_goods表中满足条件的cat_id
			select cat_id from ecs_goods where goods_name='KD876';
		2>查询ecs_category表中cat_id为上面查询出来结果的分类名称
			select cat_name from ecs_category where cat_id=(select cat_id from ecs_goods where goods_name='KD876');
	需求:查询商品的本店售价高于平均本店售价的商品名称
		1>查询ecs_goods表中平均本店售价是多少
			select avg(shop_price) from ecs_goods;
		2>查询ecs_goods表中本店售价高于上面查询出来结果的商品名称
			select goods_name from ecs_goods where shop_price>(select avg(shop_price) from ecs_goods);
	子查询可以用于数据的新增、修改、删除、查询
	--2.jpg
		3>insert into achievement values((select id from student where name='Robert' ),80);
		4>update achievement set mark=87 where id=(select id from student where name='Rose');
		5>delete from achievement where id=(select id from student where name='Betty');
		delete from student where name='Betty';
	子查询可以分为单行子查询、多行子查询
		单行子查询：查询子句返回的结果是一行   =  in
		多行子查询：查询子句返回的结果是多行   in
	需求：查询ecs_goods表中本店售价高于1000的所有商品分类名称
		1>查询ecs_goods表中满足条件的cat_id
			select cat_id from ecs_goods where shop_price>1000;
		2>查询ecs_category表中cat_id为上面查询出来结果的分类名称
			select cat_name from ecs_category where cat_id in (select cat_id from ecs_goods where shop_price>1000);


查询以C开头的国家有哪些城市?
1>查询country表中满足条件的country_id
	select country_id from country where country like 'C%';
2>查询city表中满足country_id是上面查询出来结果的城市名称
	select city from city where country_id in (select country_id from country where country like 'C%');

查询客户表中名字为MARY的所在城市?
1>查询客户表中满足条件的address_id
	select address_id from customer where first_name='MARY';
2>查询地址表中满足address_id为上面查询出来结果的city_id
	select city_id from address where address_id in (select address_id from customer where first_name='MARY');
3>查询城市表中city_id为上面查询出来结果的city
	select city from city where city_id in (select city_id from address where address_id in (select address_id from customer where first_name='MARY'));

查询客户表中名字为MARY的所在国家?
1>查询客户表中满足条件的address_id
	select address_id from customer where first_name='MARY';
2>查询地址表中满足address_id为上面查询出来结果的city_id
	select city_id from address where address_id in (select address_id from customer where first_name='MARY');
3>查询城市表中满足city_id为上面查询出来的country_id
	select country_id from city where city_id in (select city_id from address where address_id in (select address_id from customer where first_name='MARY'));
4>查询国家表中country_id为上面查询出来结果的country
	select country from country where country_id in (select country_id from city where city_id in (select city_id from address where address_id in (select address_id from customer where first_name='MARY')));





